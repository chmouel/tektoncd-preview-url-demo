---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: postback
spec:
  inputs:
    resources:
    - name: pr
      type: pullRequest
  outputs:
    resources:
      - name: pr
        type: pullRequest
  steps:
    - name: postback
      image: quay.io/openshift/origin-cli:latest
      script: |
        #!/usr/bin/env bash
        set -e

        mkdir -p $(outputs.resources.pr.path)
        cp -r $(inputs.resources.pr.path)/* $(outputs.resources.pr.path)/


        sha=$(python -c "import json, sys;r = json.loads(sys.stdin.read());print(r['Sha'][1:7])" < $(inputs.resources.pr.path)/pr.json)
        cat >$(outputs.resources.pr.path)/comments/new.json << EOF
        <b>Preview URL available at</b>: https://$(oc get route openshift-pipelines-demo-${sha} -o jsonpath='{.spec.host}')

        <img width="200" src="https://picsum.photos/800/600> <p/>
        EOF

---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy
spec:
  inputs:
    resources:
    - name: source
      type: git
    - name: pr
      type: pullRequest
  steps:
  - name: deploy
    workingDir: $(inputs.resources.source.path)
    image: quay.io/openshift/origin-cli:latest
    script: |
      #!/usr/bin/env bash
      set -eu
      # Get Rev SHA
      revsha=$(python -c "import json, sys;r = json.loads(sys.stdin.read());print(r['Sha'][1:7])" < $(inputs.resources.pr.path)/pr.json)
      fullrevsha=$(python -c "import json, sys;r = json.loads(sys.stdin.read());print(r['Sha'])" < $(inputs.resources.pr.path)/pr.json)

      # Create Deployement
      oc delete -f <(sed -e "s/%REVSHA%/${revsha}/g" -e "s/%FULLREVSHA%/${fullrevsha}/g" deployment.yaml) 2>/dev/null || true
      oc create -f <(sed -e "s/%REVSHA%/${revsha}/g" -e "s/%FULLREVSHA%/${fullrevsha}/g" deployment.yaml)

      # Add SSL
      oc apply -f <(oc get route openshift-pipelines-demo-${revsha}  -o json  | \
       python -c "import json, sys;r = json.loads(sys.stdin.read());r['spec']['tls']={'insecureEdgeTerminationPolicy': 'Redirect', 'termination': 'edge'};print(json.dumps(r))")
      echo "Preview URL available at: https://$(oc get route openshift-pipelines-demo-${revsha} -o jsonpath='{.spec.host}')"

---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: simple
spec:
  resources:
    - name: image
      type: image
    - name: pr
      type: pullRequest
    - name: source
      type: git
  tasks:
  - name: build
    taskRef:
      name: buildah
    params:
      - name: TLSVERIFY
        value: "false"
    resources:
      inputs:
        - name: source
          resource: source
      outputs:
        - name: image
          resource: image
  - name: deploy
    runAfter: [build]
    taskRef:
      name: deploy
    resources:
      inputs:
        - name: source
          resource: source
        - name: pr
          resource: pr

  - name: postback
    runAfter: [deploy]
    taskRef:
      name: postback
    resources:
      inputs:
        - name: pr
          resource: pr
      outputs:
        - name: pr
          resource: pr
